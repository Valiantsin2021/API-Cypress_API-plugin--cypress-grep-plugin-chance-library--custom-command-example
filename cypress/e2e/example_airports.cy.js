require('cypress-plugin-api')
const chaiJsonSchema = require('chai-json-schema')
const authSchema = require('../fixtures/airports_schema.json')
const osaka_airport_schema = require('../fixtures/osaka_airport_schema.json')
chai.use(chaiJsonSchema)
const airports_schema = require('../fixtures/airports_schema.json')
const baseUrl = Cypress.env('airports_url')
const apiUrl = Cypress.env('airports_api_url')
const aiportCode = Cypress.env('airport_code')
const favoritesMessage = Cypress.env('airports_favorite_msg')
const email = Cypress.env('airports_email')
const password = Cypress.env('airports_password')
let id, favoriteId
describe(
  `it AIRPORTS API auth`,
  {
    env: {
      hideCredentials: true,
      hideCredentialsOptions: {
        auth: ['bearer'],
        body: ['token']
      }
    }
  },
  () => {
    it('GET airports', () => {
      cy.api({
        method: 'GET',
        url: baseUrl
      }).then(response => {
        expect(response.status).to.eq(200)
        expect(response.body).to.be.jsonSchema(authSchema)
        expect(response.body.data[0].id).to.eq('GKA')
        expect(response.body.data[0].type).to.eq('airport')
        expect(response.body.data[0].attributes.name).to.eq('Goroka Airport')
        expect(response.body.data[0].attributes.city).to.eq('Goroka')
        expect(response.body.data[0].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[0].attributes.iata).to.eq('GKA')
        expect(response.body.data[0].attributes.icao).to.eq('AYGA')
        expect(response.body.data[0].attributes.latitude).to.eq('-6.08169')
        expect(response.body.data[0].attributes.longitude).to.eq('145.391998')
        expect(response.body.data[0].attributes.altitude).to.eq(5282)
        expect(response.body.data[0].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[1].id).to.eq('MAG')
        expect(response.body.data[1].type).to.eq('airport')
        expect(response.body.data[1].attributes.name).to.eq('Madang Airport')
        expect(response.body.data[1].attributes.city).to.eq('Madang')
        expect(response.body.data[1].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[1].attributes.iata).to.eq('MAG')
        expect(response.body.data[1].attributes.icao).to.eq('AYMD')
        expect(response.body.data[1].attributes.latitude).to.eq('-5.20708')
        expect(response.body.data[1].attributes.longitude).to.eq('145.789001')
        expect(response.body.data[1].attributes.altitude).to.eq(20)
        expect(response.body.data[1].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[2].id).to.eq('HGU')
        expect(response.body.data[2].type).to.eq('airport')
        expect(response.body.data[2].attributes.name).to.eq('Mount Hagen Kagamuga Airport')
        expect(response.body.data[2].attributes.city).to.eq('Mount Hagen')
        expect(response.body.data[2].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[2].attributes.iata).to.eq('HGU')
        expect(response.body.data[2].attributes.icao).to.eq('AYMH')
        expect(response.body.data[2].attributes.latitude).to.eq('-5.82679')
        expect(response.body.data[2].attributes.longitude).to.eq('144.296005')
        expect(response.body.data[2].attributes.altitude).to.eq(5388)
        expect(response.body.data[2].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[3].id).to.eq('LAE')
        expect(response.body.data[3].type).to.eq('airport')
        expect(response.body.data[3].attributes.name).to.eq('Nadzab Airport')
        expect(response.body.data[3].attributes.city).to.eq('Nadzab')
        expect(response.body.data[3].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[3].attributes.iata).to.eq('LAE')
        expect(response.body.data[3].attributes.icao).to.eq('AYNZ')
        expect(response.body.data[3].attributes.latitude).to.eq('-6.569803')
        expect(response.body.data[3].attributes.longitude).to.eq('146.725977')
        expect(response.body.data[3].attributes.altitude).to.eq(239)
        expect(response.body.data[3].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[4].id).to.eq('POM')
        expect(response.body.data[4].type).to.eq('airport')
        expect(response.body.data[4].attributes.name).to.eq('Port Moresby Jacksons International Airport')
        expect(response.body.data[4].attributes.city).to.eq('Port Moresby')
        expect(response.body.data[4].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[4].attributes.iata).to.eq('POM')
        expect(response.body.data[4].attributes.icao).to.eq('AYPY')
        expect(response.body.data[4].attributes.latitude).to.eq('-9.44338')
        expect(response.body.data[4].attributes.longitude).to.eq('147.220001')
        expect(response.body.data[4].attributes.altitude).to.eq(146)
        expect(response.body.data[4].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[5].id).to.eq('WWK')
        expect(response.body.data[5].type).to.eq('airport')
        expect(response.body.data[5].attributes.name).to.eq('Wewak International Airport')
        expect(response.body.data[5].attributes.city).to.eq('Wewak')
        expect(response.body.data[5].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[5].attributes.iata).to.eq('WWK')
        expect(response.body.data[5].attributes.icao).to.eq('AYWK')
        expect(response.body.data[5].attributes.latitude).to.eq('-3.58383')
        expect(response.body.data[5].attributes.longitude).to.eq('143.669006')
        expect(response.body.data[5].attributes.altitude).to.eq(19)
        expect(response.body.data[5].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[6].id).to.eq('UAK')
        expect(response.body.data[6].type).to.eq('airport')
        expect(response.body.data[6].attributes.name).to.eq('Narsarsuaq Airport')
        expect(response.body.data[6].attributes.city).to.eq('Narssarssuaq')
        expect(response.body.data[6].attributes.country).to.eq('Greenland')
        expect(response.body.data[6].attributes.iata).to.eq('UAK')
        expect(response.body.data[6].attributes.icao).to.eq('BGBW')
        expect(response.body.data[6].attributes.latitude).to.eq('61.1605')
        expect(response.body.data[6].attributes.longitude).to.eq('-45.425999')
        expect(response.body.data[6].attributes.altitude).to.eq(112)
        expect(response.body.data[6].attributes.timezone).to.eq('America/Godthab')
        expect(response.body.data[7].id).to.eq('GOH')
        expect(response.body.data[7].type).to.eq('airport')
        expect(response.body.data[7].attributes.name).to.eq('Godthaab / Nuuk Airport')
        expect(response.body.data[7].attributes.city).to.eq('Godthaab')
        expect(response.body.data[7].attributes.country).to.eq('Greenland')
        expect(response.body.data[7].attributes.iata).to.eq('GOH')
        expect(response.body.data[7].attributes.icao).to.eq('BGGH')
        expect(response.body.data[7].attributes.latitude).to.eq('64.190903')
        expect(response.body.data[7].attributes.longitude).to.eq('-51.678101')
        expect(response.body.data[7].attributes.altitude).to.eq(283)
        expect(response.body.data[7].attributes.timezone).to.eq('America/Godthab')
        expect(response.body.data[8].id).to.eq('SFJ')
        expect(response.body.data[8].type).to.eq('airport')
        expect(response.body.data[8].attributes.name).to.eq('Kangerlussuaq Airport')
        expect(response.body.data[8].attributes.city).to.eq('Sondrestrom')
        expect(response.body.data[8].attributes.country).to.eq('Greenland')
        expect(response.body.data[8].attributes.iata).to.eq('SFJ')
        expect(response.body.data[8].attributes.icao).to.eq('BGSF')
        expect(response.body.data[8].attributes.latitude).to.eq('67.012222')
        expect(response.body.data[8].attributes.longitude).to.eq('-50.711603')
        expect(response.body.data[8].attributes.altitude).to.eq(165)
        expect(response.body.data[8].attributes.timezone).to.eq('America/Godthab')
        expect(response.body.data[9].id).to.eq('THU')
        expect(response.body.data[9].type).to.eq('airport')
        expect(response.body.data[9].attributes.name).to.eq('Thule Air Base')
        expect(response.body.data[9].attributes.city).to.eq('Thule')
        expect(response.body.data[9].attributes.country).to.eq('Greenland')
        expect(response.body.data[9].attributes.iata).to.eq('THU')
        expect(response.body.data[9].attributes.icao).to.eq('BGTL')
        expect(response.body.data[9].attributes.latitude).to.eq('76.531197')
        expect(response.body.data[9].attributes.longitude).to.eq('-68.703201')
        expect(response.body.data[9].attributes.altitude).to.eq(251)
        expect(response.body.data[9].attributes.timezone).to.eq('America/Thule')
        expect(response.body.data[10].id).to.eq('AEY')
        expect(response.body.data[10].type).to.eq('airport')
        expect(response.body.data[10].attributes.name).to.eq('Akureyri Airport')
        expect(response.body.data[10].attributes.city).to.eq('Akureyri')
        expect(response.body.data[10].attributes.country).to.eq('Iceland')
        expect(response.body.data[10].attributes.iata).to.eq('AEY')
        expect(response.body.data[10].attributes.icao).to.eq('BIAR')
        expect(response.body.data[10].attributes.latitude).to.eq('65.660004')
        expect(response.body.data[10].attributes.longitude).to.eq('-18.072701')
        expect(response.body.data[10].attributes.altitude).to.eq(6)
        expect(response.body.data[10].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[11].id).to.eq('EGS')
        expect(response.body.data[11].type).to.eq('airport')
        expect(response.body.data[11].attributes.name).to.eq('Egilssta√∞ir Airport')
        expect(response.body.data[11].attributes.city).to.eq('Egilsstadir')
        expect(response.body.data[11].attributes.country).to.eq('Iceland')
        expect(response.body.data[11].attributes.iata).to.eq('EGS')
        expect(response.body.data[11].attributes.icao).to.eq('BIEG')
        expect(response.body.data[11].attributes.latitude).to.eq('65.283302')
        expect(response.body.data[11].attributes.longitude).to.eq('-14.4014')
        expect(response.body.data[11].attributes.altitude).to.eq(76)
        expect(response.body.data[11].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[12].id).to.eq('HFN')
        expect(response.body.data[12].type).to.eq('airport')
        expect(response.body.data[12].attributes.name).to.eq('Hornafj√∂r√∞ur Airport')
        expect(response.body.data[12].attributes.city).to.eq('Hofn')
        expect(response.body.data[12].attributes.country).to.eq('Iceland')
        expect(response.body.data[12].attributes.iata).to.eq('HFN')
        expect(response.body.data[12].attributes.icao).to.eq('BIHN')
        expect(response.body.data[12].attributes.latitude).to.eq('64.295601')
        expect(response.body.data[12].attributes.longitude).to.eq('-15.2272')
        expect(response.body.data[12].attributes.altitude).to.eq(24)
        expect(response.body.data[12].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[13].id).to.eq('HZK')
        expect(response.body.data[13].type).to.eq('airport')
        expect(response.body.data[13].attributes.name).to.eq('H√∫sav√≠k Airport')
        expect(response.body.data[13].attributes.city).to.eq('Husavik')
        expect(response.body.data[13].attributes.country).to.eq('Iceland')
        expect(response.body.data[13].attributes.iata).to.eq('HZK')
        expect(response.body.data[13].attributes.icao).to.eq('BIHU')
        expect(response.body.data[13].attributes.latitude).to.eq('65.952301')
        expect(response.body.data[13].attributes.longitude).to.eq('-17.426001')
        expect(response.body.data[13].attributes.altitude).to.eq(48)
        expect(response.body.data[13].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[14].id).to.eq('IFJ')
        expect(response.body.data[14].type).to.eq('airport')
        expect(response.body.data[14].attributes.name).to.eq('√çsafj√∂r√∞ur Airport')
        expect(response.body.data[14].attributes.city).to.eq('Isafjordur')
        expect(response.body.data[14].attributes.country).to.eq('Iceland')
        expect(response.body.data[14].attributes.iata).to.eq('IFJ')
        expect(response.body.data[14].attributes.icao).to.eq('BIIS')
        expect(response.body.data[14].attributes.latitude).to.eq('66.058098')
        expect(response.body.data[14].attributes.longitude).to.eq('-23.1353')
        expect(response.body.data[14].attributes.altitude).to.eq(8)
        expect(response.body.data[14].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[15].id).to.eq('KEF')
        expect(response.body.data[15].type).to.eq('airport')
        expect(response.body.data[15].attributes.name).to.eq('Keflavik International Airport')
        expect(response.body.data[15].attributes.city).to.eq('Keflavik')
        expect(response.body.data[15].attributes.country).to.eq('Iceland')
        expect(response.body.data[15].attributes.iata).to.eq('KEF')
        expect(response.body.data[15].attributes.icao).to.eq('BIKF')
        expect(response.body.data[15].attributes.latitude).to.eq('63.985001')
        expect(response.body.data[15].attributes.longitude).to.eq('-22.6056')
        expect(response.body.data[15].attributes.altitude).to.eq(171)
        expect(response.body.data[15].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[16].id).to.eq('PFJ')
        expect(response.body.data[16].type).to.eq('airport')
        expect(response.body.data[16].attributes.name).to.eq('Patreksfj√∂r√∞ur Airport')
        expect(response.body.data[16].attributes.city).to.eq('Patreksfjordur')
        expect(response.body.data[16].attributes.country).to.eq('Iceland')
        expect(response.body.data[16].attributes.iata).to.eq('PFJ')
        expect(response.body.data[16].attributes.icao).to.eq('BIPA')
        expect(response.body.data[16].attributes.latitude).to.eq('65.555801')
        expect(response.body.data[16].attributes.longitude).to.eq('-23.965')
        expect(response.body.data[16].attributes.altitude).to.eq(11)
        expect(response.body.data[16].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[17].id).to.eq('RKV')
        expect(response.body.data[17].type).to.eq('airport')
        expect(response.body.data[17].attributes.name).to.eq('Reykjavik Airport')
        expect(response.body.data[17].attributes.city).to.eq('Reykjavik')
        expect(response.body.data[17].attributes.country).to.eq('Iceland')
        expect(response.body.data[17].attributes.iata).to.eq('RKV')
        expect(response.body.data[17].attributes.icao).to.eq('BIRK')
        expect(response.body.data[17].attributes.latitude).to.eq('64.129997')
        expect(response.body.data[17].attributes.longitude).to.eq('-21.940599')
        expect(response.body.data[17].attributes.altitude).to.eq(48)
        expect(response.body.data[17].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[18].id).to.eq('SIJ')
        expect(response.body.data[18].type).to.eq('airport')
        expect(response.body.data[18].attributes.name).to.eq('Siglufj√∂r√∞ur Airport')
        expect(response.body.data[18].attributes.city).to.eq('Siglufjordur')
        expect(response.body.data[18].attributes.country).to.eq('Iceland')
        expect(response.body.data[18].attributes.iata).to.eq('SIJ')
        expect(response.body.data[18].attributes.icao).to.eq('BISI')
        expect(response.body.data[18].attributes.latitude).to.eq('66.133301')
        expect(response.body.data[18].attributes.longitude).to.eq('-18.9167')
        expect(response.body.data[18].attributes.altitude).to.eq(10)
        expect(response.body.data[18].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[19].id).to.eq('VEY')
        expect(response.body.data[19].type).to.eq('airport')
        expect(response.body.data[19].attributes.name).to.eq('Vestmannaeyjar Airport')
        expect(response.body.data[19].attributes.city).to.eq('Vestmannaeyjar')
        expect(response.body.data[19].attributes.country).to.eq('Iceland')
        expect(response.body.data[19].attributes.iata).to.eq('VEY')
        expect(response.body.data[19].attributes.icao).to.eq('BIVM')
        expect(response.body.data[19].attributes.latitude).to.eq('63.424301')
        expect(response.body.data[19].attributes.longitude).to.eq('-20.2789')
        expect(response.body.data[19].attributes.altitude).to.eq(326)
        expect(response.body.data[19].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[20].id).to.eq('YAM')
        expect(response.body.data[20].type).to.eq('airport')
        expect(response.body.data[20].attributes.name).to.eq('Sault Ste Marie Airport')
        expect(response.body.data[20].attributes.city).to.eq('Sault Sainte Marie')
        expect(response.body.data[20].attributes.country).to.eq('Canada')
        expect(response.body.data[20].attributes.iata).to.eq('YAM')
        expect(response.body.data[20].attributes.icao).to.eq('CYAM')
        expect(response.body.data[20].attributes.latitude).to.eq('46.485001')
        expect(response.body.data[20].attributes.longitude).to.eq('-84.509399')
        expect(response.body.data[20].attributes.altitude).to.eq(630)
        expect(response.body.data[20].attributes.timezone).to.eq('America/Toronto')
        expect(response.body.data[21].id).to.eq('YAY')
        expect(response.body.data[21].type).to.eq('airport')
        expect(response.body.data[21].attributes.name).to.eq('St. Anthony Airport')
        expect(response.body.data[21].attributes.city).to.eq('St. Anthony')
        expect(response.body.data[21].attributes.country).to.eq('Canada')
        expect(response.body.data[21].attributes.iata).to.eq('YAY')
        expect(response.body.data[21].attributes.icao).to.eq('CYAY')
        expect(response.body.data[21].attributes.latitude).to.eq('51.391899')
        expect(response.body.data[21].attributes.longitude).to.eq('-56.083099')
        expect(response.body.data[21].attributes.altitude).to.eq(108)
        expect(response.body.data[21].attributes.timezone).to.eq('America/St_Johns')
        expect(response.body.data[22].id).to.eq('YAZ')
        expect(response.body.data[22].type).to.eq('airport')
        expect(response.body.data[22].attributes.name).to.eq('Tofino / Long Beach Airport')
        expect(response.body.data[22].attributes.city).to.eq('Tofino')
        expect(response.body.data[22].attributes.country).to.eq('Canada')
        expect(response.body.data[22].attributes.iata).to.eq('YAZ')
        expect(response.body.data[22].attributes.icao).to.eq('CYAZ')
        expect(response.body.data[22].attributes.latitude).to.eq('49.079833')
        expect(response.body.data[22].attributes.longitude).to.eq('-125.775583')
        expect(response.body.data[22].attributes.altitude).to.eq(80)
        expect(response.body.data[22].attributes.timezone).to.eq('America/Vancouver')
        expect(response.body.data[23].id).to.eq('YBB')
        expect(response.body.data[23].type).to.eq('airport')
        expect(response.body.data[23].attributes.name).to.eq('Kugaaruk Airport')
        expect(response.body.data[23].attributes.city).to.eq('Pelly Bay')
        expect(response.body.data[23].attributes.country).to.eq('Canada')
        expect(response.body.data[23].attributes.iata).to.eq('YBB')
        expect(response.body.data[23].attributes.icao).to.eq('CYBB')
        expect(response.body.data[23].attributes.latitude).to.eq('68.534401')
        expect(response.body.data[23].attributes.longitude).to.eq('-89.808098')
        expect(response.body.data[23].attributes.altitude).to.eq(56)
        expect(response.body.data[23].attributes.timezone).to.eq('America/Edmonton')
        expect(response.body.data[24].id).to.eq('YBC')
        expect(response.body.data[24].type).to.eq('airport')
        expect(response.body.data[24].attributes.name).to.eq('Baie Comeau Airport')
        expect(response.body.data[24].attributes.city).to.eq('Baie Comeau')
        expect(response.body.data[24].attributes.country).to.eq('Canada')
        expect(response.body.data[24].attributes.iata).to.eq('YBC')
        expect(response.body.data[24].attributes.icao).to.eq('CYBC')
        expect(response.body.data[24].attributes.latitude).to.eq('49.1325')
        expect(response.body.data[24].attributes.longitude).to.eq('-68.204399')
        expect(response.body.data[24].attributes.altitude).to.eq(71)
        expect(response.body.data[24].attributes.timezone).to.eq('America/Toronto')
        expect(response.body.data[25].id).to.eq('YBG')
        expect(response.body.data[25].type).to.eq('airport')
        expect(response.body.data[25].attributes.name).to.eq('CFB Bagotville')
        expect(response.body.data[25].attributes.city).to.eq('Bagotville')
        expect(response.body.data[25].attributes.country).to.eq('Canada')
        expect(response.body.data[25].attributes.iata).to.eq('YBG')
        expect(response.body.data[25].attributes.icao).to.eq('CYBG')
        expect(response.body.data[25].attributes.latitude).to.eq('48.330601')
        expect(response.body.data[25].attributes.longitude).to.eq('-70.996399')
        expect(response.body.data[25].attributes.altitude).to.eq(522)
        expect(response.body.data[25].attributes.timezone).to.eq('America/Toronto')
        expect(response.body.data[26].id).to.eq('YBK')
        expect(response.body.data[26].type).to.eq('airport')
        expect(response.body.data[26].attributes.name).to.eq('Baker Lake Airport')
        expect(response.body.data[26].attributes.city).to.eq('Baker Lake')
        expect(response.body.data[26].attributes.country).to.eq('Canada')
        expect(response.body.data[26].attributes.iata).to.eq('YBK')
        expect(response.body.data[26].attributes.icao).to.eq('CYBK')
        expect(response.body.data[26].attributes.latitude).to.eq('64.298897')
        expect(response.body.data[26].attributes.longitude).to.eq('-96.077797')
        expect(response.body.data[26].attributes.altitude).to.eq(59)
        expect(response.body.data[26].attributes.timezone).to.eq('America/Winnipeg')
        expect(response.body.data[27].id).to.eq('YBL')
        expect(response.body.data[27].type).to.eq('airport')
        expect(response.body.data[27].attributes.name).to.eq('Campbell River Airport')
        expect(response.body.data[27].attributes.city).to.eq('Campbell River')
        expect(response.body.data[27].attributes.country).to.eq('Canada')
        expect(response.body.data[27].attributes.iata).to.eq('YBL')
        expect(response.body.data[27].attributes.icao).to.eq('CYBL')
        expect(response.body.data[27].attributes.latitude).to.eq('49.950802')
        expect(response.body.data[27].attributes.longitude).to.eq('-125.271004')
        expect(response.body.data[27].attributes.altitude).to.eq(346)
        expect(response.body.data[27].attributes.timezone).to.eq('America/Vancouver')
        expect(response.body.data[28].id).to.eq('YBR')
        expect(response.body.data[28].type).to.eq('airport')
        expect(response.body.data[28].attributes.name).to.eq('Brandon Municipal Airport')
        expect(response.body.data[28].attributes.city).to.eq('Brandon')
        expect(response.body.data[28].attributes.country).to.eq('Canada')
        expect(response.body.data[28].attributes.iata).to.eq('YBR')
        expect(response.body.data[28].attributes.icao).to.eq('CYBR')
        expect(response.body.data[28].attributes.latitude).to.eq('49.91')
        expect(response.body.data[28].attributes.longitude).to.eq('-99.951897')
        expect(response.body.data[28].attributes.altitude).to.eq(1343)
        expect(response.body.data[28].attributes.timezone).to.eq('America/Winnipeg')
        expect(response.body.data[29].id).to.eq('YCB')
        expect(response.body.data[29].type).to.eq('airport')
        expect(response.body.data[29].attributes.name).to.eq('Cambridge Bay Airport')
        expect(response.body.data[29].attributes.city).to.eq('Cambridge Bay')
        expect(response.body.data[29].attributes.country).to.eq('Canada')
        expect(response.body.data[29].attributes.iata).to.eq('YCB')
        expect(response.body.data[29].attributes.icao).to.eq('CYCB')
        expect(response.body.data[29].attributes.latitude).to.eq('69.108101')
        expect(response.body.data[29].attributes.longitude).to.eq('-105.138')
        expect(response.body.data[29].attributes.altitude).to.eq(90)
        expect(response.body.data[29].attributes.timezone).to.eq('America/Edmonton')
        expect(response.body.links.first).to.eq('https://airportgap.com/api/airports')
        expect(response.body.links.self).to.eq('https://airportgap.com/api/airports')
        expect(response.body.links.last).to.eq('https://airportgap.com/api/airports?page=203')
        expect(response.body.links.prev).to.eq('https://airportgap.com/api/airports')
        expect(response.body.links.next).to.eq('https://airportgap.com/api/airports?page=2')
        expect(response.body.data[0].id).to.eq('GKA')
        expect(response.body.data[0].type).to.eq('airport')
        expect(response.body.data[0].attributes.name).to.eq('Goroka Airport')
        expect(response.body.data[0].attributes.city).to.eq('Goroka')
        expect(response.body.data[0].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[0].attributes.iata).to.eq('GKA')
        expect(response.body.data[0].attributes.icao).to.eq('AYGA')
        expect(response.body.data[0].attributes.latitude).to.eq('-6.08169')
        expect(response.body.data[0].attributes.longitude).to.eq('145.391998')
        expect(response.body.data[0].attributes.altitude).to.eq(5282)
        expect(response.body.data[0].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[1].id).to.eq('MAG')
        expect(response.body.data[1].type).to.eq('airport')
        expect(response.body.data[1].attributes.name).to.eq('Madang Airport')
        expect(response.body.data[1].attributes.city).to.eq('Madang')
        expect(response.body.data[1].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[1].attributes.iata).to.eq('MAG')
        expect(response.body.data[1].attributes.icao).to.eq('AYMD')
        expect(response.body.data[1].attributes.latitude).to.eq('-5.20708')
        expect(response.body.data[1].attributes.longitude).to.eq('145.789001')
        expect(response.body.data[1].attributes.altitude).to.eq(20)
        expect(response.body.data[1].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[2].id).to.eq('HGU')
        expect(response.body.data[2].type).to.eq('airport')
        expect(response.body.data[2].attributes.name).to.eq('Mount Hagen Kagamuga Airport')
        expect(response.body.data[2].attributes.city).to.eq('Mount Hagen')
        expect(response.body.data[2].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[2].attributes.iata).to.eq('HGU')
        expect(response.body.data[2].attributes.icao).to.eq('AYMH')
        expect(response.body.data[2].attributes.latitude).to.eq('-5.82679')
        expect(response.body.data[2].attributes.longitude).to.eq('144.296005')
        expect(response.body.data[2].attributes.altitude).to.eq(5388)
        expect(response.body.data[2].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[3].id).to.eq('LAE')
        expect(response.body.data[3].type).to.eq('airport')
        expect(response.body.data[3].attributes.name).to.eq('Nadzab Airport')
        expect(response.body.data[3].attributes.city).to.eq('Nadzab')
        expect(response.body.data[3].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[3].attributes.iata).to.eq('LAE')
        expect(response.body.data[3].attributes.icao).to.eq('AYNZ')
        expect(response.body.data[3].attributes.latitude).to.eq('-6.569803')
        expect(response.body.data[3].attributes.longitude).to.eq('146.725977')
        expect(response.body.data[3].attributes.altitude).to.eq(239)
        expect(response.body.data[3].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[4].id).to.eq('POM')
        expect(response.body.data[4].type).to.eq('airport')
        expect(response.body.data[4].attributes.name).to.eq('Port Moresby Jacksons International Airport')
        expect(response.body.data[4].attributes.city).to.eq('Port Moresby')
        expect(response.body.data[4].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[4].attributes.iata).to.eq('POM')
        expect(response.body.data[4].attributes.icao).to.eq('AYPY')
        expect(response.body.data[4].attributes.latitude).to.eq('-9.44338')
        expect(response.body.data[4].attributes.longitude).to.eq('147.220001')
        expect(response.body.data[4].attributes.altitude).to.eq(146)
        expect(response.body.data[4].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[5].id).to.eq('WWK')
        expect(response.body.data[5].type).to.eq('airport')
        expect(response.body.data[5].attributes.name).to.eq('Wewak International Airport')
        expect(response.body.data[5].attributes.city).to.eq('Wewak')
        expect(response.body.data[5].attributes.country).to.eq('Papua New Guinea')
        expect(response.body.data[5].attributes.iata).to.eq('WWK')
        expect(response.body.data[5].attributes.icao).to.eq('AYWK')
        expect(response.body.data[5].attributes.latitude).to.eq('-3.58383')
        expect(response.body.data[5].attributes.longitude).to.eq('143.669006')
        expect(response.body.data[5].attributes.altitude).to.eq(19)
        expect(response.body.data[5].attributes.timezone).to.eq('Pacific/Port_Moresby')
        expect(response.body.data[6].id).to.eq('UAK')
        expect(response.body.data[6].type).to.eq('airport')
        expect(response.body.data[6].attributes.name).to.eq('Narsarsuaq Airport')
        expect(response.body.data[6].attributes.city).to.eq('Narssarssuaq')
        expect(response.body.data[6].attributes.country).to.eq('Greenland')
        expect(response.body.data[6].attributes.iata).to.eq('UAK')
        expect(response.body.data[6].attributes.icao).to.eq('BGBW')
        expect(response.body.data[6].attributes.latitude).to.eq('61.1605')
        expect(response.body.data[6].attributes.longitude).to.eq('-45.425999')
        expect(response.body.data[6].attributes.altitude).to.eq(112)
        expect(response.body.data[6].attributes.timezone).to.eq('America/Godthab')
        expect(response.body.data[7].id).to.eq('GOH')
        expect(response.body.data[7].type).to.eq('airport')
        expect(response.body.data[7].attributes.name).to.eq('Godthaab / Nuuk Airport')
        expect(response.body.data[7].attributes.city).to.eq('Godthaab')
        expect(response.body.data[7].attributes.country).to.eq('Greenland')
        expect(response.body.data[7].attributes.iata).to.eq('GOH')
        expect(response.body.data[7].attributes.icao).to.eq('BGGH')
        expect(response.body.data[7].attributes.latitude).to.eq('64.190903')
        expect(response.body.data[7].attributes.longitude).to.eq('-51.678101')
        expect(response.body.data[7].attributes.altitude).to.eq(283)
        expect(response.body.data[7].attributes.timezone).to.eq('America/Godthab')
        expect(response.body.data[8].id).to.eq('SFJ')
        expect(response.body.data[8].type).to.eq('airport')
        expect(response.body.data[8].attributes.name).to.eq('Kangerlussuaq Airport')
        expect(response.body.data[8].attributes.city).to.eq('Sondrestrom')
        expect(response.body.data[8].attributes.country).to.eq('Greenland')
        expect(response.body.data[8].attributes.iata).to.eq('SFJ')
        expect(response.body.data[8].attributes.icao).to.eq('BGSF')
        expect(response.body.data[8].attributes.latitude).to.eq('67.012222')
        expect(response.body.data[8].attributes.longitude).to.eq('-50.711603')
        expect(response.body.data[8].attributes.altitude).to.eq(165)
        expect(response.body.data[8].attributes.timezone).to.eq('America/Godthab')
        expect(response.body.data[9].id).to.eq('THU')
        expect(response.body.data[9].type).to.eq('airport')
        expect(response.body.data[9].attributes.name).to.eq('Thule Air Base')
        expect(response.body.data[9].attributes.city).to.eq('Thule')
        expect(response.body.data[9].attributes.country).to.eq('Greenland')
        expect(response.body.data[9].attributes.iata).to.eq('THU')
        expect(response.body.data[9].attributes.icao).to.eq('BGTL')
        expect(response.body.data[9].attributes.latitude).to.eq('76.531197')
        expect(response.body.data[9].attributes.longitude).to.eq('-68.703201')
        expect(response.body.data[9].attributes.altitude).to.eq(251)
        expect(response.body.data[9].attributes.timezone).to.eq('America/Thule')
        expect(response.body.data[10].id).to.eq('AEY')
        expect(response.body.data[10].type).to.eq('airport')
        expect(response.body.data[10].attributes.name).to.eq('Akureyri Airport')
        expect(response.body.data[10].attributes.city).to.eq('Akureyri')
        expect(response.body.data[10].attributes.country).to.eq('Iceland')
        expect(response.body.data[10].attributes.iata).to.eq('AEY')
        expect(response.body.data[10].attributes.icao).to.eq('BIAR')
        expect(response.body.data[10].attributes.latitude).to.eq('65.660004')
        expect(response.body.data[10].attributes.longitude).to.eq('-18.072701')
        expect(response.body.data[10].attributes.altitude).to.eq(6)
        expect(response.body.data[10].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[11].id).to.eq('EGS')
        expect(response.body.data[11].type).to.eq('airport')
        expect(response.body.data[11].attributes.name).to.eq('Egilssta√∞ir Airport')
        expect(response.body.data[11].attributes.city).to.eq('Egilsstadir')
        expect(response.body.data[11].attributes.country).to.eq('Iceland')
        expect(response.body.data[11].attributes.iata).to.eq('EGS')
        expect(response.body.data[11].attributes.icao).to.eq('BIEG')
        expect(response.body.data[11].attributes.latitude).to.eq('65.283302')
        expect(response.body.data[11].attributes.longitude).to.eq('-14.4014')
        expect(response.body.data[11].attributes.altitude).to.eq(76)
        expect(response.body.data[11].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[12].id).to.eq('HFN')
        expect(response.body.data[12].type).to.eq('airport')
        expect(response.body.data[12].attributes.name).to.eq('Hornafj√∂r√∞ur Airport')
        expect(response.body.data[12].attributes.city).to.eq('Hofn')
        expect(response.body.data[12].attributes.country).to.eq('Iceland')
        expect(response.body.data[12].attributes.iata).to.eq('HFN')
        expect(response.body.data[12].attributes.icao).to.eq('BIHN')
        expect(response.body.data[12].attributes.latitude).to.eq('64.295601')
        expect(response.body.data[12].attributes.longitude).to.eq('-15.2272')
        expect(response.body.data[12].attributes.altitude).to.eq(24)
        expect(response.body.data[12].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[13].id).to.eq('HZK')
        expect(response.body.data[13].type).to.eq('airport')
        expect(response.body.data[13].attributes.name).to.eq('H√∫sav√≠k Airport')
        expect(response.body.data[13].attributes.city).to.eq('Husavik')
        expect(response.body.data[13].attributes.country).to.eq('Iceland')
        expect(response.body.data[13].attributes.iata).to.eq('HZK')
        expect(response.body.data[13].attributes.icao).to.eq('BIHU')
        expect(response.body.data[13].attributes.latitude).to.eq('65.952301')
        expect(response.body.data[13].attributes.longitude).to.eq('-17.426001')
        expect(response.body.data[13].attributes.altitude).to.eq(48)
        expect(response.body.data[13].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[14].id).to.eq('IFJ')
        expect(response.body.data[14].type).to.eq('airport')
        expect(response.body.data[14].attributes.name).to.eq('√çsafj√∂r√∞ur Airport')
        expect(response.body.data[14].attributes.city).to.eq('Isafjordur')
        expect(response.body.data[14].attributes.country).to.eq('Iceland')
        expect(response.body.data[14].attributes.iata).to.eq('IFJ')
        expect(response.body.data[14].attributes.icao).to.eq('BIIS')
        expect(response.body.data[14].attributes.latitude).to.eq('66.058098')
        expect(response.body.data[14].attributes.longitude).to.eq('-23.1353')
        expect(response.body.data[14].attributes.altitude).to.eq(8)
        expect(response.body.data[14].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[15].id).to.eq('KEF')
        expect(response.body.data[15].type).to.eq('airport')
        expect(response.body.data[15].attributes.name).to.eq('Keflavik International Airport')
        expect(response.body.data[15].attributes.city).to.eq('Keflavik')
        expect(response.body.data[15].attributes.country).to.eq('Iceland')
        expect(response.body.data[15].attributes.iata).to.eq('KEF')
        expect(response.body.data[15].attributes.icao).to.eq('BIKF')
        expect(response.body.data[15].attributes.latitude).to.eq('63.985001')
        expect(response.body.data[15].attributes.longitude).to.eq('-22.6056')
        expect(response.body.data[15].attributes.altitude).to.eq(171)
        expect(response.body.data[15].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[16].id).to.eq('PFJ')
        expect(response.body.data[16].type).to.eq('airport')
        expect(response.body.data[16].attributes.name).to.eq('Patreksfj√∂r√∞ur Airport')
        expect(response.body.data[16].attributes.city).to.eq('Patreksfjordur')
        expect(response.body.data[16].attributes.country).to.eq('Iceland')
        expect(response.body.data[16].attributes.iata).to.eq('PFJ')
        expect(response.body.data[16].attributes.icao).to.eq('BIPA')
        expect(response.body.data[16].attributes.latitude).to.eq('65.555801')
        expect(response.body.data[16].attributes.longitude).to.eq('-23.965')
        expect(response.body.data[16].attributes.altitude).to.eq(11)
        expect(response.body.data[16].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[17].id).to.eq('RKV')
        expect(response.body.data[17].type).to.eq('airport')
        expect(response.body.data[17].attributes.name).to.eq('Reykjavik Airport')
        expect(response.body.data[17].attributes.city).to.eq('Reykjavik')
        expect(response.body.data[17].attributes.country).to.eq('Iceland')
        expect(response.body.data[17].attributes.iata).to.eq('RKV')
        expect(response.body.data[17].attributes.icao).to.eq('BIRK')
        expect(response.body.data[17].attributes.latitude).to.eq('64.129997')
        expect(response.body.data[17].attributes.longitude).to.eq('-21.940599')
        expect(response.body.data[17].attributes.altitude).to.eq(48)
        expect(response.body.data[17].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[18].id).to.eq('SIJ')
        expect(response.body.data[18].type).to.eq('airport')
        expect(response.body.data[18].attributes.name).to.eq('Siglufj√∂r√∞ur Airport')
        expect(response.body.data[18].attributes.city).to.eq('Siglufjordur')
        expect(response.body.data[18].attributes.country).to.eq('Iceland')
        expect(response.body.data[18].attributes.iata).to.eq('SIJ')
        expect(response.body.data[18].attributes.icao).to.eq('BISI')
        expect(response.body.data[18].attributes.latitude).to.eq('66.133301')
        expect(response.body.data[18].attributes.longitude).to.eq('-18.9167')
        expect(response.body.data[18].attributes.altitude).to.eq(10)
        expect(response.body.data[18].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[19].id).to.eq('VEY')
        expect(response.body.data[19].type).to.eq('airport')
        expect(response.body.data[19].attributes.name).to.eq('Vestmannaeyjar Airport')
        expect(response.body.data[19].attributes.city).to.eq('Vestmannaeyjar')
        expect(response.body.data[19].attributes.country).to.eq('Iceland')
        expect(response.body.data[19].attributes.iata).to.eq('VEY')
        expect(response.body.data[19].attributes.icao).to.eq('BIVM')
        expect(response.body.data[19].attributes.latitude).to.eq('63.424301')
        expect(response.body.data[19].attributes.longitude).to.eq('-20.2789')
        expect(response.body.data[19].attributes.altitude).to.eq(326)
        expect(response.body.data[19].attributes.timezone).to.eq('Atlantic/Reykjavik')
        expect(response.body.data[20].id).to.eq('YAM')
        expect(response.body.data[20].type).to.eq('airport')
        expect(response.body.data[20].attributes.name).to.eq('Sault Ste Marie Airport')
        expect(response.body.data[20].attributes.city).to.eq('Sault Sainte Marie')
        expect(response.body.data[20].attributes.country).to.eq('Canada')
        expect(response.body.data[20].attributes.iata).to.eq('YAM')
        expect(response.body.data[20].attributes.icao).to.eq('CYAM')
        expect(response.body.data[20].attributes.latitude).to.eq('46.485001')
        expect(response.body.data[20].attributes.longitude).to.eq('-84.509399')
        expect(response.body.data[20].attributes.altitude).to.eq(630)
        expect(response.body.data[20].attributes.timezone).to.eq('America/Toronto')
        expect(response.body.data[21].id).to.eq('YAY')
        expect(response.body.data[21].type).to.eq('airport')
        expect(response.body.data[21].attributes.name).to.eq('St. Anthony Airport')
        expect(response.body.data[21].attributes.city).to.eq('St. Anthony')
        expect(response.body.data[21].attributes.country).to.eq('Canada')
        expect(response.body.data[21].attributes.iata).to.eq('YAY')
        expect(response.body.data[21].attributes.icao).to.eq('CYAY')
        expect(response.body.data[21].attributes.latitude).to.eq('51.391899')
        expect(response.body.data[21].attributes.longitude).to.eq('-56.083099')
        expect(response.body.data[21].attributes.altitude).to.eq(108)
        expect(response.body.data[21].attributes.timezone).to.eq('America/St_Johns')
        expect(response.body.data[22].id).to.eq('YAZ')
        expect(response.body.data[22].type).to.eq('airport')
        expect(response.body.data[22].attributes.name).to.eq('Tofino / Long Beach Airport')
        expect(response.body.data[22].attributes.city).to.eq('Tofino')
        expect(response.body.data[22].attributes.country).to.eq('Canada')
        expect(response.body.data[22].attributes.iata).to.eq('YAZ')
        expect(response.body.data[22].attributes.icao).to.eq('CYAZ')
        expect(response.body.data[22].attributes.latitude).to.eq('49.079833')
        expect(response.body.data[22].attributes.longitude).to.eq('-125.775583')
        expect(response.body.data[22].attributes.altitude).to.eq(80)
        expect(response.body.data[22].attributes.timezone).to.eq('America/Vancouver')
        expect(response.body.data[23].id).to.eq('YBB')
        expect(response.body.data[23].type).to.eq('airport')
        expect(response.body.data[23].attributes.name).to.eq('Kugaaruk Airport')
        expect(response.body.data[23].attributes.city).to.eq('Pelly Bay')
        expect(response.body.data[23].attributes.country).to.eq('Canada')
        expect(response.body.data[23].attributes.iata).to.eq('YBB')
        expect(response.body.data[23].attributes.icao).to.eq('CYBB')
        expect(response.body.data[23].attributes.latitude).to.eq('68.534401')
        expect(response.body.data[23].attributes.longitude).to.eq('-89.808098')
        expect(response.body.data[23].attributes.altitude).to.eq(56)
        expect(response.body.data[23].attributes.timezone).to.eq('America/Edmonton')
        expect(response.body.data[24].id).to.eq('YBC')
        expect(response.body.data[24].type).to.eq('airport')
        expect(response.body.data[24].attributes.name).to.eq('Baie Comeau Airport')
        expect(response.body.data[24].attributes.city).to.eq('Baie Comeau')
        expect(response.body.data[24].attributes.country).to.eq('Canada')
        expect(response.body.data[24].attributes.iata).to.eq('YBC')
        expect(response.body.data[24].attributes.icao).to.eq('CYBC')
        expect(response.body.data[24].attributes.latitude).to.eq('49.1325')
        expect(response.body.data[24].attributes.longitude).to.eq('-68.204399')
        expect(response.body.data[24].attributes.altitude).to.eq(71)
        expect(response.body.data[24].attributes.timezone).to.eq('America/Toronto')
        expect(response.body.data[25].id).to.eq('YBG')
        expect(response.body.data[25].type).to.eq('airport')
        expect(response.body.data[25].attributes.name).to.eq('CFB Bagotville')
        expect(response.body.data[25].attributes.city).to.eq('Bagotville')
        expect(response.body.data[25].attributes.country).to.eq('Canada')
        expect(response.body.data[25].attributes.iata).to.eq('YBG')
        expect(response.body.data[25].attributes.icao).to.eq('CYBG')
        expect(response.body.data[25].attributes.latitude).to.eq('48.330601')
        expect(response.body.data[25].attributes.longitude).to.eq('-70.996399')
        expect(response.body.data[25].attributes.altitude).to.eq(522)
        expect(response.body.data[25].attributes.timezone).to.eq('America/Toronto')
        expect(response.body.data[26].id).to.eq('YBK')
        expect(response.body.data[26].type).to.eq('airport')
        expect(response.body.data[26].attributes.name).to.eq('Baker Lake Airport')
        expect(response.body.data[26].attributes.city).to.eq('Baker Lake')
        expect(response.body.data[26].attributes.country).to.eq('Canada')
        expect(response.body.data[26].attributes.iata).to.eq('YBK')
        expect(response.body.data[26].attributes.icao).to.eq('CYBK')
        expect(response.body.data[26].attributes.latitude).to.eq('64.298897')
        expect(response.body.data[26].attributes.longitude).to.eq('-96.077797')
        expect(response.body.data[26].attributes.altitude).to.eq(59)
        expect(response.body.data[26].attributes.timezone).to.eq('America/Winnipeg')
        expect(response.body.data[27].id).to.eq('YBL')
        expect(response.body.data[27].type).to.eq('airport')
        expect(response.body.data[27].attributes.name).to.eq('Campbell River Airport')
        expect(response.body.data[27].attributes.city).to.eq('Campbell River')
        expect(response.body.data[27].attributes.country).to.eq('Canada')
        expect(response.body.data[27].attributes.iata).to.eq('YBL')
        expect(response.body.data[27].attributes.icao).to.eq('CYBL')
        expect(response.body.data[27].attributes.latitude).to.eq('49.950802')
        expect(response.body.data[27].attributes.longitude).to.eq('-125.271004')
        expect(response.body.data[27].attributes.altitude).to.eq(346)
        expect(response.body.data[27].attributes.timezone).to.eq('America/Vancouver')
        expect(response.body.data[28].id).to.eq('YBR')
        expect(response.body.data[28].type).to.eq('airport')
        expect(response.body.data[28].attributes.name).to.eq('Brandon Municipal Airport')
        expect(response.body.data[28].attributes.city).to.eq('Brandon')
        expect(response.body.data[28].attributes.country).to.eq('Canada')
        expect(response.body.data[28].attributes.iata).to.eq('YBR')
        expect(response.body.data[28].attributes.icao).to.eq('CYBR')
        expect(response.body.data[28].attributes.latitude).to.eq('49.91')
        expect(response.body.data[28].attributes.longitude).to.eq('-99.951897')
        expect(response.body.data[28].attributes.altitude).to.eq(1343)
        expect(response.body.data[28].attributes.timezone).to.eq('America/Winnipeg')
        expect(response.body.data[29].id).to.eq('YCB')
        expect(response.body.data[29].type).to.eq('airport')
        expect(response.body.data[29].attributes.name).to.eq('Cambridge Bay Airport')
        expect(response.body.data[29].attributes.city).to.eq('Cambridge Bay')
        expect(response.body.data[29].attributes.country).to.eq('Canada')
        expect(response.body.data[29].attributes.iata).to.eq('YCB')
        expect(response.body.data[29].attributes.icao).to.eq('CYCB')
        expect(response.body.data[29].attributes.latitude).to.eq('69.108101')
        expect(response.body.data[29].attributes.longitude).to.eq('-105.138')
        expect(response.body.data[29].attributes.altitude).to.eq(90)
        expect(response.body.data[29].attributes.timezone).to.eq('America/Edmonton')
        expect(response.body.links.first).to.eq('https://airportgap.com/api/airports')
        expect(response.body.links.self).to.eq('https://airportgap.com/api/airports')
        expect(response.body.links.last).to.eq('https://airportgap.com/api/airports?page=203')
        expect(response.body.links.prev).to.eq('https://airportgap.com/api/airports')
        expect(response.body.links.next).to.eq('https://airportgap.com/api/airports?page=2')
        expect(response.body).to.be.jsonSchema(airports_schema)
      })
    })
    it('GET Osaka airport response', () => {
      cy.api({
        method: 'GET',
        url: `${baseUrl}/${aiportCode}`
      }).then(response => {
        expect(response.status).to.eq(200)
        expect(response.body.data.id).to.eq('KIX')
        expect(response.body.data.type).to.eq('airport')
        expect(response.body.data.attributes.name).to.eq('Kansai International Airport')
        expect(response.body.data.attributes.city).to.eq('Osaka')
        expect(response.body.data.attributes.country).to.eq('Japan')
        expect(response.body.data.attributes.iata).to.eq('KIX')
        expect(response.body.data.attributes.icao).to.eq('RJBB')
        expect(response.body.data.attributes.latitude).to.eq('34.427299')
        expect(response.body.data.attributes.longitude).to.eq('135.244003')
        expect(response.body.data.attributes.altitude).to.eq(26)
        expect(response.body.data.attributes.timezone).to.eq('Asia/Tokyo')
        expect(response.body).to.have.jsonSchema(osaka_airport_schema)
      })
    })
    it('POST /airports/distance', () => {
      cy.api({
        method: 'POST',
        url: `${baseUrl}/distance`,
        auth: {
          bearer: Cypress.env('airports_token')
        },
        qs: { from: aiportCode, to: 'NRT' }
      }).then(response => {
        expect(response.status).to.eq(200)
        expect(response.body.data.id).to.equal('KIX-NRT')
        expect(response.body.data.type).to.equal('airport_distance')
        expect(response.body.data.attributes.from_airport.id).to.equal(3158)
        expect(response.body.data.attributes.from_airport.name).to.equal('Kansai International Airport')
        expect(response.body.data.attributes.from_airport.city).to.equal('Osaka')
        expect(response.body.data.attributes.from_airport.country).to.equal('Japan')
        expect(response.body.data.attributes.from_airport.iata).to.equal('KIX')
        expect(response.body.data.attributes.from_airport.icao).to.equal('RJBB')
        expect(response.body.data.attributes.from_airport.latitude).to.equal('34.427299')
        expect(response.body.data.attributes.from_airport.longitude).to.equal('135.244003')
        expect(response.body.data.attributes.from_airport.altitude).to.equal(26)
        expect(response.body.data.attributes.from_airport.timezone).to.equal('Asia/Tokyo')
        expect(response.body.data.attributes.to_airport.id).to.equal(1721)
        expect(response.body.data.attributes.to_airport.name).to.equal('Narita International Airport')
        expect(response.body.data.attributes.to_airport.city).to.equal('Tokyo')
        expect(response.body.data.attributes.to_airport.country).to.equal('Japan')
        expect(response.body.data.attributes.to_airport.iata).to.equal('NRT')
        expect(response.body.data.attributes.to_airport.icao).to.equal('RJAA')
        expect(response.body.data.attributes.to_airport.latitude).to.equal('35.764702')
        expect(response.body.data.attributes.to_airport.longitude).to.equal('140.386002')
        expect(response.body.data.attributes.to_airport.altitude).to.equal(141)
        expect(response.body.data.attributes.to_airport.timezone).to.equal('Asia/Tokyo')
        expect(response.body.data.attributes.kilometers).to.equal(490.8053652969214)
        expect(response.body.data.attributes.miles).to.equal(304.76001022047103)
        expect(response.body.data.attributes.nautical_miles).to.equal(264.82908133654655)
      })
    })
    it('POST /airports/tokens', () => {
      cy.api({
        method: 'POST',
        url: `${apiUrl}/tokens`,
        auth: {
          bearer: Cypress.env('airports_token')
        },
        body: { email, password }
      }).then(response => {
        expect(response.status).to.eq(200)
        expect(response.body.token).to.eq(Cypress.env('airports_token'))
      })
    })
    it(`GET /favorites`, () => {
      cy.api({
        method: 'GET',
        url: apiUrl + '/favorites',
        auth: {
          bearer: Cypress.env('airports_token')
        }
      }).then(response => {
        expect(response.status).to.eq(200)
        expect(response.body.data).to.deep.eq([])
      })
    })
    it(`POST /favorites`, () => {
      cy.api({
        method: 'POST',
        url: `${apiUrl}/favorites`,
        body: { airport_id: `${aiportCode}` },
        auth: { bearer: Cypress.env('airports_token') }
      }).then(response => {
        console.log(response)
        expect(response.status).to.eq(201)
        expect(response.body.data.type).to.eq('favorite')
        expect(response.body.data.attributes.airport.name).to.eq('Kansai International Airport')
        expect(response.body.data.attributes.airport.city).to.eq('Osaka')
        expect(response.body.data.attributes.airport.country).to.eq('Japan')
        expect(response.body.data.attributes.airport.iata).to.eq('KIX')
        expect(response.body.data.attributes.airport.icao).to.eq('RJBB')
        expect(response.body.data.attributes.airport.latitude).to.eq('34.427299')
        expect(response.body.data.attributes.airport.longitude).to.eq('135.244003')
        expect(response.body.data.attributes.airport.altitude).to.eq(26)
        expect(response.body.data.attributes.airport.timezone).to.eq('Asia/Tokyo')
        expect(response.body.data.attributes.note).to.be.null
        id = response.body.data.attributes.airport.id
      })
    })
    it(`GET /favorites created`, () => {
      cy.api({
        method: 'GET',
        url: `${apiUrl}/favorites`,
        auth: { bearer: Cypress.env('airports_token') }
      }).then(response => {
        expect(response.status).to.eq(200)
        expect(response.body.data[0].type).to.eq('favorite')
        expect(response.body.data[0].attributes.airport.name).to.eq('Kansai International Airport')
        expect(response.body.data[0].attributes.airport.city).to.eq('Osaka')
        expect(response.body.data[0].attributes.airport.country).to.eq('Japan')
        expect(response.body.data[0].attributes.airport.iata).to.eq('KIX')
        expect(response.body.data[0].attributes.airport.icao).to.eq('RJBB')
        expect(response.body.data[0].attributes.airport.latitude).to.eq('34.427299')
        expect(response.body.data[0].attributes.airport.longitude).to.eq('135.244003')
        expect(response.body.data[0].attributes.airport.altitude).to.eq(26)
        expect(response.body.data[0].attributes.airport.timezone).to.eq('Asia/Tokyo')
        expect(response.body.data[0].attributes.note).to.be.null
        favoriteId = response.body.data[0].id
      })
    })
    it(`GET /favorites created`, () => {
      cy.api({
        method: 'GET',
        url: `${apiUrl}/favorites`,
        auth: { bearer: Cypress.env('airports_token') }
      }).then(response => {
        expect(response.status).to.eq(200)
        expect(response.body.data[0].type).to.eq('favorite')
        expect(response.body.data[0].attributes.airport.name).to.eq('Kansai International Airport')
        expect(response.body.data[0].attributes.airport.city).to.eq('Osaka')
        expect(response.body.data[0].attributes.airport.country).to.eq('Japan')
        expect(response.body.data[0].attributes.airport.iata).to.eq('KIX')
        expect(response.body.data[0].attributes.airport.icao).to.eq('RJBB')
        expect(response.body.data[0].attributes.airport.latitude).to.eq('34.427299')
        expect(response.body.data[0].attributes.airport.longitude).to.eq('135.244003')
        expect(response.body.data[0].attributes.airport.altitude).to.eq(26)
        expect(response.body.data[0].attributes.airport.timezone).to.eq('Asia/Tokyo')
        expect(response.body.data[0].attributes.note).to.be.null
      })
    })
    it(`GET /favorites/:id`, () => {
      cy.api({
        method: 'GET',
        url: `${apiUrl}/favorites/${favoriteId}`,
        auth: { bearer: Cypress.env('airports_token') }
      }).then(response => {
        expect(response.status).to.eq(200)
        expect(response.body.data.type).to.eq('favorite')
        expect(response.body.data.id).to.eq(favoriteId)
        expect(response.body.data.attributes.airport.id).to.eq(id)
        expect(response.body.data.attributes.airport.name).to.eq('Kansai International Airport')
        expect(response.body.data.attributes.airport.city).to.eq('Osaka')
        expect(response.body.data.attributes.airport.country).to.eq('Japan')
        expect(response.body.data.attributes.airport.iata).to.eq('KIX')
        expect(response.body.data.attributes.airport.icao).to.eq('RJBB')
        expect(response.body.data.attributes.airport.latitude).to.eq('34.427299')
        expect(response.body.data.attributes.airport.longitude).to.eq('135.244003')
        expect(response.body.data.attributes.airport.altitude).to.eq(26)
        expect(response.body.data.attributes.airport.timezone).to.eq('Asia/Tokyo')
        expect(response.body.data.attributes.note).to.be.null
      })
    })
    it(`PATCH /airports/:id`, () => {
      cy.wrap(favoriteId).then(favoriteId => {
        cy.api({
          method: 'PATCH',
          url: `${apiUrl}/favorites/${favoriteId}`,
          body: { airport_id: `${aiportCode}`, note: favoritesMessage },
          auth: { bearer: Cypress.env('airports_token') }
        }).then(response => {
          expect(response.status).to.eq(200)
          expect(response.body.data.id).to.eq(favoriteId)
          expect(response.body.data.type).to.eq('favorite')
          expect(response.body.data.attributes.airport.id).to.eq(id)
          expect(response.body.data.attributes.airport.name).to.eq('Kansai International Airport')
          expect(response.body.data.attributes.airport.city).to.eq('Osaka')
          expect(response.body.data.attributes.airport.country).to.eq('Japan')
          expect(response.body.data.attributes.airport.iata).to.eq('KIX')
          expect(response.body.data.attributes.airport.icao).to.eq('RJBB')
          expect(response.body.data.attributes.airport.latitude).to.eq('34.427299')
          expect(response.body.data.attributes.airport.longitude).to.eq('135.244003')
          expect(response.body.data.attributes.airport.altitude).to.eq(26)
          expect(response.body.data.attributes.airport.timezone).to.eq('Asia/Tokyo')
          expect(response.body.data.attributes.note).to.eq(favoritesMessage)
        })
      })
    })
    it(`GET /favorites patched`, () => {
      cy.api({ method: 'GET', url: `${apiUrl}/favorites`, auth: { bearer: Cypress.env('airports_token') } }).then(
        response => {
          expect(response.status).to.eq(200)
          expect(response.body.data[0].type).to.eq('favorite')
          expect(response.body.data[0].id).to.eq(favoriteId)
          expect(response.body.data[0].attributes.airport.id).to.eq(id)
          expect(response.body.data[0].attributes.airport.name).to.eq('Kansai International Airport')
          expect(response.body.data[0].attributes.airport.city).to.eq('Osaka')
          expect(response.body.data[0].attributes.airport.country).to.eq('Japan')
          expect(response.body.data[0].attributes.airport.iata).to.eq('KIX')
          expect(response.body.data[0].attributes.airport.icao).to.eq('RJBB')
          expect(response.body.data[0].attributes.airport.latitude).to.eq('34.427299')
          expect(response.body.data[0].attributes.airport.longitude).to.eq('135.244003')
          expect(response.body.data[0].attributes.airport.altitude).to.eq(26)
          expect(response.body.data[0].attributes.airport.timezone).to.eq('Asia/Tokyo')
          expect(response.body.data[0].attributes.note).to.eq(favoritesMessage)
        }
      )
    })
    it(`DELETE /favorites/:id`, () => {
      cy.wrap(favoriteId).then(favoriteId => {
        cy.api({
          method: 'DELETE',
          url: `${apiUrl}/favorites/${favoriteId}`,
          auth: { bearer: Cypress.env('airports_token') }
        }).then(response => {
          expect(response.status).to.eq(204)
        })
      })
    })
    it(`GET /favorites after delete`, () => {
      cy.api({ method: 'GET', url: `${apiUrl}/favorites`, auth: { bearer: Cypress.env('airports_token') } }).then(
        response => {
          expect(response.status).to.eq(200)
          expect(response.body.data).to.deep.eq([])
        }
      )
    })
  }
)
